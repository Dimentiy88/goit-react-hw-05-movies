{"version":3,"file":"static/js/602.f91f8b9a.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.jsx","components/Placeholder/Placeholder.stayled.jsx","components/Placeholder/Palceholder.jsx","components/FilmList/FilmList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/getMoviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  display: grid;\n  justify-items: start;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 25px;\n  margin-top: 15px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemFilms = styled.li`\n  color: inherit;\n  text-align: center;\n  font-weight: 400;\n  font-size: 14px;\n\n  transition: transform 0.2s ease;\n\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n  :hover {\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n      rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n      rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  }\n\n  a: hover;\n  a:focus {\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n    max-width: 200px;\n  }\n  title {\n    display: flex;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 200px;\n  height: 300px;\n  background-color: #fff;\n  font-style: italic;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: grey;\n`;\n","import { Wrapper } from './Placeholder.stayled';\n\nconst Placeholder = ({ title }) => {\n  return <Wrapper>{title} will be added soon...</Wrapper>;\n};\n\nexport default Placeholder;\n","import { useLocation, Link } from 'react-router-dom';\nimport { ListFilms, ItemFilms } from './FilmList.styled';\nimport Placeholder from '../Placeholder/Palceholder';\n\nconst FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListFilms>\n      {movies.map(({ id, title, name, poster_path, original_title }) => (\n        <ItemFilms key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={title ? title : name}\n                width=\"200\"\n              />\n            ) : (\n              <Placeholder title={`${title} poster`} />\n            )}\n\n            <title>{title ? title : name}</title>\n          </Link>\n        </ItemFilms>\n      ))}\n    </ListFilms>\n  );\n};\n\nexport default FilmsList;\n\n// <ListFilms>\n//   {movies.map(({ id, original_title }) => (\n//     <ItemFilms key={id}>\n//       <Link state={{ from: location }} to={`/movies/${id}`}>\n//         {original_title}\n//       </Link>\n//     </ItemFilms>\n//   ))}\n// </ListFilms>;\n","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :not(:disabled):active,\n  :focus,\n  :not(:disabled):hover {\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { InputSearch, ButtonSearch } from './Form.styled';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/getMoviesApi';\n\nimport Form from 'components/Form/Form';\nimport FilmsList from 'components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(Movies);\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '35d0834a9921bbb13d1153018d5cbd5a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["ListFilms","styled","ItemFilms","Wrapper","title","movies","location","useLocation","map","id","name","poster_path","original_title","to","state","from","src","alt","width","InputSearch","ButtonSearch","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","Movies","setMovies","useSearchParams","searchParams","console","log","useEffect","currentQuery","get","fetchMovieByQuery","getMovieByQuery","movieByQuery","length","axios","API_KEY","getTrendingMovies","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}
{"version":3,"file":"static/js/544.d1a6e01f.chunk.js","mappings":"mNA6BaA,EAAYC,EAAAA,EAAAA,GAAH,oTAcTC,EAAYD,EAAAA,EAAAA,GAAH,glBCzCTE,EAAUF,EAAAA,EAAAA,IAAH,mM,SCIpB,EAJoB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACrB,OAAO,UAACD,EAAD,WAAUC,EAAV,2BACR,EC4BD,EA5BkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,MAAOM,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,eAAjC,OACV,UAACV,EAAD,YACE,SAAC,KAAD,CAAMW,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,SACGK,GACC,gBACEK,IAAG,yCAAoCL,GACvCM,IAAKb,GAAgBM,EACrBQ,MAAM,SAGR,SAAC,EAAD,CAAad,MAAK,UAAKA,EAAL,gBAKtB,cAAGU,MAAO,CAAEC,KAAMT,GAAYO,GAAE,kBAAaJ,GAA7C,SACGG,MAfWH,EADN,KAsBjB,C,6ECTD,UAfa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkB,IAAIC,KAAKH,EAC5B,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAWf,OAAQA,MAGxB,C,8LCjBDmB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHH,EAAiB,mCAAG,sGACRE,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBC,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBI,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAMC,GAAN,yFACHP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBADG,uBAClBC,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZM,EAAY,mCAAG,WAAMD,GAAN,yFACHP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADG,uBAClBC,EADkB,EAClBA,KADkB,kBAKnBA,EAAKO,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADM,uBACrBC,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/FilmList/FilmList.styled.jsx","components/Placeholder/Placeholder.stayled.jsx","components/Placeholder/Palceholder.jsx","components/FilmList/FilmList.jsx","pages/Home/Home.jsx","services/getMoviesApi.js"],"sourcesContent":["// import styled from '@emotion/styled';\n\n// export const ListFilms = styled.ul`\n//   margin-top: 12px;\n// `;\n// export const ItemFilms = styled.li`\n//   font-weight: 400;\n//   font-size: 14px;\n\n//   background-color: #2a2a2a;\n//   border-radius: 14px;\n\n//   :not(:last-child) {\n//     margin-bottom: 6px;\n//   }\n\n//   a:hover,\n//   a:focus {\n//     background-color: #ffc700;\n//     color: #111111;\n//   }\n\n//   a {\n//     display: block;\n//     padding: 16px 16px;\n//   }\n// `;\nimport styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  display: grid;\n  justify-items: start;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 25px;\n  margin-top: 15px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemFilms = styled.li`\n  color: inherit;\n  text-align: center;\n  font-weight: 400;\n  font-size: 14px;\n\n  transition: transform 0.2s ease;\n\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n  :hover {\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n      rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n      rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  }\n\n  a: hover;\n  a:focus {\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 200px;\n  height: 300px;\n  background-color: #fff;\n  font-style: italic;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: grey;\n`;\n","import { Wrapper } from './Placeholder.stayled';\n\nconst Placeholder = ({ title }) => {\n  return <Wrapper>{title} will be added soon...</Wrapper>;\n};\n\nexport default Placeholder;\n","import { useLocation, Link } from 'react-router-dom';\nimport { ListFilms, ItemFilms } from './FilmList.styled';\nimport Placeholder from '../Placeholder/Palceholder';\n\nconst FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListFilms>\n      {movies.map(({ id, title, name, poster_path, original_title }) => (\n        <ItemFilms key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={title ? title : name}\n                width=\"200\"\n              />\n            ) : (\n              <Placeholder title={`${title} poster`} />\n            )}\n\n            {/* <title>{title ? title : name}</title> */}\n          </Link>\n          <p state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </p>\n        </ItemFilms>\n      ))}\n    </ListFilms>\n  );\n};\n\nexport default FilmsList;\n\n// <ListFilms>\n//   {movies.map(({ id, original_title }) => (\n//     <ItemFilms key={id}>\n//       <Link state={{ from: location }} to={`/movies/${id}`}>\n//         {original_title}\n//       </Link>\n//     </ItemFilms>\n//   ))}\n// </ListFilms>;\n","import { useEffect, useState } from 'react';\n\nimport { getTrendingMovies } from 'services/getMoviesApi';\n\nimport FilmsList from 'components/FilmList/FilmList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies('').then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <FilmsList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '35d0834a9921bbb13d1153018d5cbd5a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["ListFilms","styled","ItemFilms","Wrapper","title","movies","location","useLocation","map","id","name","poster_path","original_title","to","state","from","src","alt","width","useState","setMovies","useEffect","getTrendingMovies","then","axios","API_KEY","data","results","getMovieByQuery","query","getMovieById","movieId","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}